from aiogram import types
from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder

from database.cooldown import get_cooldown_state


async def cooldown_kb(user_id, chat_id):
    builder = InlineKeyboardBuilder()
    state = await get_cooldown_state(chat_id)

    toggle_text = "‚ùå –í—ã–∫–ª" if state == "on" else "‚úÖ –í–∫–ª"
    builder.add(InlineKeyboardButton(text="üïì –ö—É–ª–î–∞—É–Ω", callback_data=f"set_time:{user_id}"))
    builder.add(InlineKeyboardButton(text=toggle_text, callback_data=f"toggle:{user_id}"))
    return builder.as_markup()


async def cooldown_time_kb(chat_id, user_id):
    builder = InlineKeyboardBuilder()
    times = [
        ("1 –º–∏–Ω—É—Ç–∞", 1),
        ("10 –º–∏–Ω—É—Ç", 10),
        ("20 –º–∏–Ω—É—Ç", 20),
        ("30 –º–∏–Ω—É—Ç", 30),
        ("1 —á–∞—Å", 60)
    ]

    for label, minutes in times:
        builder.row(InlineKeyboardButton(text=label, callback_data=f"time_set:{chat_id}:{minutes}:{user_id}"))

    builder.add(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=f"back:{chat_id}:{user_id}"))
    builder.adjust(1)
    return builder.as_markup()


async def profile_kb(user_id):
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(text="üé¥–ú–æ–∏ –∫–∞—Ä—Ç—ã", callback_data=f"cards:{user_id}"),
        InlineKeyboardButton(text="üèÜ –¢–æ–ø –∫–∞—Ä—Ç–æ—á–µ–∫", callback_data=f"top:{user_id}"),
        InlineKeyboardButton(text="üóº –ö–ª–∞–Ω—ã", callback_data=f"clans:{user_id}")
    )
    builder.adjust(2, 2)
    return builder.as_markup()


async def clans_kb():
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(text="üè∞ –°–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω", callback_data="tribe:create"),
        InlineKeyboardButton(text="üÄÑÔ∏è –í—Å—Ç—É–ø–∏—Ç—å –≤ –∫–ª–∞–Ω", callback_data="tribe:join"),
        InlineKeyboardButton(text="üë§ –ú–æ–π –∫–ª–∞–Ω", callback_data="tribe:my_clan"),
    )
    builder.adjust(1)
    return builder.as_markup()


async def top_kb(user_id):
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(text="üÉè –¢–æ–ø –ø–æ –∫–∞—Ä—Ç–æ—á–∫–∞–º", callback_data=f"top_cards:{user_id}"),
        InlineKeyboardButton(text="üíØ –¢–æ–ø –ø–æ –æ—á–∫–∞–º", callback_data=f"top_points:{user_id}"),
        InlineKeyboardButton(text="üé¥ –¢–æ–ø –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è", callback_data=f"top_all:{user_id}"),
        InlineKeyboardButton(text="üè∞ –¢–æ–ø –∫–ª–∞–Ω–æ–≤", callback_data=f"top_clans:{user_id}")
    )
    builder.adjust(2, 1)
    return builder.as_markup()


async def top_back_kb(user_id):
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="–ù–∞–∑–∞–¥ üîôÔ∏è", callback_data=f"top_back:{user_id}"))
    return builder.as_markup()


async def rarity_kb():
    keyboard = InlineKeyboardBuilder()
    rarities = ["‚ö°Ô∏è –†–µ–¥–∫–∞—è", "üê≤ –°–≤–µ—Ä—Ö–†–µ–¥–∫–∞—è", "‚öîÔ∏è –ú–∏—Ñ–∏—á–µ—Å–∫–∞—è", "ü©∏ –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è", "üéû –ê–Ω–∏–º–∫–∞"]
    rarities_callback = ["–†–µ–¥–∫–∞—è", "–°–≤–µ—Ä—Ö–†–µ–¥–∫–∞—è", "–ú–∏—Ñ–∏—á–µ—Å–∫–∞—è", "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è", "–ê–Ω–∏–º–∫–∞"]

    for rarity, rarity_callback in zip(rarities, rarities_callback):
        button = InlineKeyboardButton(text=rarity, callback_data=f"select_rarity:{rarity_callback}")
        keyboard.add(button)

    keyboard.adjust(1)
    return keyboard.as_markup()


async def next_keyboard(rarity, index):
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f"view_card:{rarity}:{index+1}"))
    return builder.as_markup()


async def cards_keyboard(rarity, index, total_cards):
    builder = InlineKeyboardBuilder()
    if index > 0:
        builder.add(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f'view_card:{rarity}:{index-1}'))
    if index < total_cards - 1:
        builder.add(InlineKeyboardButton(text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data=f'view_card:{rarity}:{index+1}'))
    return builder.as_markup()


async def add_to_group():
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É", url="https://t.me/MemeCatsCardsBot?startgroup=new"))
    return builder.as_markup()


async def start_keyboard():
    builder = ReplyKeyboardBuilder()
    builder.add(types.KeyboardButton(text="üêà –ú–∫–æ—Ç"))
    builder.add(types.KeyboardButton(text="üë•Ô∏è –ü—Ä–æ—Ñ–∏–ª—å"))
    builder.adjust(2)
    return builder.as_markup(resize_keyboard=True)